name: Continuous Integration

# Event triggers
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

# Environment
env:
  BUILD_TYPE: Release

# Jobs
jobs:
  integration:
    name: Integration Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # Checkout code
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      # Build and install dependencies
      - name: Install Boost (Windows)
        if: runner.os == 'Windows'
        run: |
          cd ${{ github.workspace }}\extern\boost
          .\bootstrap.bat
          .\b2.exe link=static
          .\b2.exe install --prefix=boost-install
      - name: Install Boost (Linux)
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          cd ${{ github.workspace }}/extern/boost
          ./bootstrap.sh
          ./b2 link=static
          ./b2 install --prefix=boost-install
      - name: Install OpenCV
        run: |
          cd ${{ github.workspace }}/extern/opencv
          cmake -S . -B build -DCMAKE_INSTALL_PREFIX=opencv-install -DOPENCV_FORCE_3RDPARTY_BUILD=ON -DWITH_EIGEN=OFF -DBUILD_SHARED_LIBS=OFF -DCMAKE_FIND_FRAMEWORK=LAST -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          cmake --build build --config ${{ env.BUILD_TYPE }} -j $(nproc --all)
          cmake --install build --config ${{ env.BUILD_TYPE }}
          

      # Build and install using CMake
      - name: Configure
        run: cmake -B ${{ github.workspace }}/build -S ${{ github.workspace }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }} --parallel $(nproc --all)
      - name: Install
        run: sudo cmake --install ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}

      # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install Python Dependencies
        run: pip install -r python/requirements.txt

      # Run Test
      - name: Run Integration Tests
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/share/lib
          python3 ./run.py
        working-directory: python/integration_test
