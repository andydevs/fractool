name: Continuous Integration

# Event triggers
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

# Environment
env:
  BUILD_TYPE: Release

# Jobs
jobs:
  integration:
    name: Integration Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # Checkout code
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      # Build dependencies
      - name: Build Deps
        shell: bash
        run: |
          echo "Building boost..."
          cd extern\boost
          ./bootstrap.sh
          ./b2 link=static
          ./b2 install --prefix=boost-install
          echo "Building zlib..."
          cd ..\zlib
          cmake -S . -B build -DCMAKE_INSTALL_PREFIX=zlib-install -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          cmake --build build --config ${{ env.BUILD_TYPE }} --parallel $(nproc --all)
          cmake --install build --config ${{ env.BUILD_TYPE }}
          echo "Building libpng..."
          cd ..\libpng
          ZLIBLIB=/path/to/lib export ZLIBLIB
          ZLIBINC=/path/to/include export ZLIBINC
          CPPFLAGS="-I$ZLIBINC" export CPPFLAGS
          LDFLAGS="-L$ZLIBLIB" export LDFLAGS
          LD_LIBRARY_PATH="$ZLIBLIB:$LD_LIBRARY_PATH" export LD_LIBRARY_PATH
          cmake -S . -B build -DCMAKE_INSTALL_PREFIX=libpng-install -DPNG_BUILD_ZLIB=ON -DPNG_SHARED=OFF -DPNG_TESTS=OFF -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          cmake --build build
          cmake --install build

      # Build and install using CMake
      - name: Configure
        run: cmake -B ${{ github.workspace }}/build -S ${{ github.workspace }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }} --parallel $(nproc --all)
      - name: Install
        run: sudo cmake --install ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}

      # # Setup Python
      # - name: Setup Python
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: '3.x'
      # - name: Install Python Dependencies
      #   run: pip install -r python/requirements.txt

      # # Run Test
      # - name: Run Integration Tests
      #   run: |
      #     export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib
      #     export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
      #     export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/share/lib
      #     python3 ./run.py
      #   working-directory: python/integration_test
