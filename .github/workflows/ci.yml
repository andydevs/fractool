name: Continuous Integration

# Event triggers
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

# Environment
env:
  BUILD_TYPE: Release
  ROOT_DIR: ${{ github.workspace }}

# Jobs
jobs:
  integration:
    name: Integration Test
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      # Checkout code
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      # Build dependencies
      - name: Build Dependencies (Windows)
        if: runner.os == 'Windows'
        run: .\env\build-deps.ps1
      - name: Build Dependencies (Linux/macOS)
        if: runner.os != 'Windows'
        run: env/build-deps.sh

      # Build and install using CMake
      - name: Configure
        run: cmake -B ${{ github.workspace }}/build -S ${{ github.workspace }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }} --parallel $(nproc --all)
      - name: Install (Windows)
        if: runner.os == 'Windows'
        run: cmake --install ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}
      - name: Install (Linux/macOS)
        if: runner.os != 'Windows'
        run: sudo cmake --install ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}

      # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install Python Dependencies
        run: pip install -r python/requirements.txt

      # Run Test
      - name: Run Integration Tests
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/share/lib
          python3 ./run.py
        working-directory: python/integration_test
