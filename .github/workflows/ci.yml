name: Continuous Integration

# Event triggers
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

# Environment
env:
  BUILD_TYPE: Release
  ROOT_DIR: ${{ github.workspace }}

# Jobs
jobs:
  integration:
    name: Integration Test
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            script: sh
            installer: sh
            sudo: sudo
          - os: macos-latest
            script: sh
            installer: sh
            sudo: sudo
          - os: windows-latest
            script: ps1
            installer: exe
            sudo: ''
    runs-on: ${{ matrix.os }}
    steps:
      # Checkout code
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      # Build dependencies
      - name: Build Dependencies
        run: ${{ github.workspace }}/env/build-deps.${{ matrix.script }}

      # Build and install using CMake
      - name: Configure
        run: cmake -B ${{ github.workspace }}/build -S ${{ github.workspace }} -DCPACK_PACKAGE_FILE_NAME=FracTool-${{ github.ref_name }}-${{ runner.os }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }} --parallel $(nproc --all)
      - name: Install
        run: ${{ matrix.sudo }} --install ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}

      # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install Python Dependencies
        run: pip install -r python/requirements.txt

      # Run Test
      - name: Run Integration Tests (Windows)
        if: runner.os == 'Windows'
        run: python3 ./run.py ${{ runner.os == 'Windows' && 'C:/Program Files (x86)/Fractool/bin' || '' }}
        working-directory: python/integration_test

      # Publish installer
      - name: Run CPack
        run: ${{ runner.sudo }} cpack
        working-directory: ${{ github.workspace }}/build
      - name: Publish installer
        uses: actions/upload-artifact@v3
        with:
          name: FracTool-${{ github.ref_name }}-${{ runner.os }}
          path: ${{ github.workspace }}/build/FracTool-${{ github.ref_name }}-${{ runner.os }}.${{ matrix.installer }}